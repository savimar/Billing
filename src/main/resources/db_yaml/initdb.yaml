apiVersion: batch/v1
kind: Job
metadata:
  name: "initbilldb"
  namespace: bill
spec:
  template:
    metadata:
      name: "initbilldb"
    spec:
      restartPolicy: OnFailure
#      initContainers:
#        - name: check-db-ready
#          image: postgres:13.1-alpine
#          env:
#            - name: POSTGRES_HOST
#              value: "postgres"
#            - name: POSTGRES_PORT
#              value: "5432"
#          command:
#            - sh
#            - "-c"
#            - |
#              until pg_isready -h $POSTGRES_HOST  -p  $POSTGRES_PORT;
#              do echo waiting for database; sleep 2; done;
      containers:
      - name: initdb
        image: postgres:13.1-alpine
        env:
          - name: DATABASE_URI            
            valueFrom:
             secretKeyRef:
              name: db-secret
              key: DATABASE_URL 
        command:
          - sh
          - "-c"
          - |
            psql $DATABASE_URI <<'EOF'
             DROP table IF EXISTS users;
             DROP table IF EXISTS bills;
            create table users (  id serial primary key,
                      first_name varchar(200),
                      last_name varchar(200),
                      email varchar(50)
  );

  create table bills
  (
  id  serial primary key,
  user_id  integer,
  account  integer,

  constraint fk_bills_user
  foreign key (user_id)
  REFERENCES users (id)

  );
  insert into users (id, first_name,last_name )
  values
  (1,'Иван', 'Иванов'),
  (2,'Нина', 'Петрова');

  insert into bills (id, user_id, account)
  values
  (3, 1, 200),
  (4,2,  10000);


  EOF
  backoffLimit: 3